{
    "contents" : "#' Combine technical replicates\n#'\n#' @param type Either \"sum\" or \"mean\"\n#' @param libeSizeNorm If TRUE (the default), library size normalize the data\n#' @param totalSeqReads use the total number of sequence reads in FASTA/FASTQ file for library size normalization\n#' @param totalReads use the total number of reads \n#' @param expressDat the expression data\n#' @param designMat the design matrix\n#' @param sampleNameList the sample names, character list\n#' @param libeList the library list, sample characters\n#' \n#' @keywords manip\n#' @export\n#' @examples\n#' mtcars[with(mtcars, order(cyl, disp)), ]\n#' arrange(mtcars, cyl, disp)\n#' arrange(mtcars, cyl, desc(disp))\n\ninitDat <- function(countTable, totalReads, filenameRoot, sample1Name, \n                    sample2Name, ERCCdilution, spikeVol, totalRNAmass, choseFDR,\n                    printPDF = T){\n  ## These variables may become options for user later, for now they will be defined as\n  ## internal default values\n  DEtest = T\n  erccMixes = \"Ambion4plexPair\"\n  totalSeqReads = T\n  libeSizeNorm = T\n  myYLimMA = c(-3.5,3.5)\n  myXLim = c(-10,15)\n  myYLim = NULL\n  ##############################\n  \n  library(ggplot2)\n  library(reshape2)\n  library(plyr)\n  library(scales)\n  library(edgeR)\n  library(locfit)\n  library(QuasiSeq)\n  library(grid)\n  library(stringr)\n\n  sampleInfo = list(sample1Name = sample1Name,\n                    sample2Name = sample2Name, choseFDR = choseFDR,\n                    ERCCdilution = ERCCdilution, spikeVol = spikeVol,\n                    totalRNAmass = totalRNAmass, printPDF = printPDF, \n                    DEtest = DEtest, totalSeqReads = totalSeqReads, \n                    libeSizeNorm = libeSizeNorm, myYLimMA = myYLimMA,\n                    myXLim = myXLim, myYLim = myYLim)\n  \n  expDat = list(sampleInfo = sampleInfo)\n  \n  if (!is.null(filenameRoot)){\n    expDat <- dashboardPDF(expDat,filenameRoot = filenameRoot)  \n  }else{\n    stop(\"The filenameRoot character string has not been defined!\")\n  }\n  \n  \n  ###############################################################################\n  # Run loadERCCInfo function to obtain ERCC information\n  expDat <- loadERCCInfo(expDat, erccMixes=\"Ambion4plexPair\")\n  \n  ###############################################################################\n  # Assume user has created data frame countTable and totalReads vector\n  # process those data files to add to expDat structure\n  expDat <- loadExpMeas(expDat, countTable, totalReads)\n  \n  ###############################################################################\n  # library size normalize the data\n  expDat <- libeSizeNorm(expDat)\n  \n  ###############################################################################\n  # length normalize the ERCC concentrations\n  expDat <- prepERCCDat(expDat)\n  \n  # Estimate the mean library size factor for the data to use to estimate\n  # corresponding concentrations for LODR\n  expDat <- estMnLibeFactor(expDat, cnt = expDat$Transcripts)\n  \n  return(expDat)\n  \n}",
    "created" : 1383949512313.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1040015823",
    "id" : "85176989",
    "lastKnownWriteTime" : 1383955670,
    "path" : "~/Documents/NISTMunro/Projects/testerccdashboard/R/initDat.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}