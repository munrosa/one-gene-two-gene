{
    "contents" : "erccROC <- function(expDat){\n  # get the req'd libraries\n  require( ggplot2 )\n  require( reshape2 )\n  \n  filenameRoot = expDat$sampleInfo$filenameRoot\n  folds = expDat$sampleInfo$FCcode\n  legendLabels = expDat$sampleInfo$legendLabels\n  idCols = expDat$sampleInfo$idColsSRM\n  idCols <- idCols[-which(is.na(idCols$Ratio)),]\n  #Create a custom color scale\n  #myColors <- c(\"#CC3333\", \"#339900\",\"#FF9933\",\"#66CC99\")\n  myColors <- c(\"#FF9900\",\"#339966\", \"#6699CC\", \"#CC6666\")\n  names(myColors) <- levels(folds$Ratio)\n  myColorsDiff <- myColors[-(which(folds$FC == 1))]\n  legendLabelsDiff <- legendLabels[-(which(folds$FC == 1))]\n  \n  theme_update(legend.justification=c(1,0.375), legend.position=c(1,0.375))\n  \n  colScale <- scale_colour_manual(name = \"Ratio\",values = myColorsDiff, labels = legendLabelsDiff)\n  fillScale <- scale_fill_manual(name = \"Ratio\", values = myColorsDiff, labels = legendLabelsDiff)\n  \n  # get these handy libraries, too\n  library(\"ROCR\")\n  library(\"pROC\")\n  \n  # Read in the p.values from the file\n  pValDat = read.csv(file=paste(filenameRoot,\"ERCC\",\"Pvals.csv\"),header=T)\n  names(pValDat)[1]= \"Feature\"\n  pValDat <- pValDat[-2]\n  \n  pValDat$Feature <- as.character(pValDat$Feature)\n  \n  # now build the ROCR prediction objects\n  # Format of FCcode = data.frame(Ratio = c(\"a\",\"b\",\"c\",\"d\"),FC =  c(4,1,.667,.5));\n  FCcodeC = folds[-c(which(folds$FC == 1)),]\n  pool.pred <- NULL\n  FPR <- NULL\n  TPR <- NULL\n  FoldChange <- NULL\n  ROCdat <- NULL\n  AUCdat <-NULL\n  for (i in 1:nrow(FCcodeC)){\n    \n    pool.predMeas = prediction(1- pValDat$Pval[ (pValDat$Fold == FCcodeC$FC[i]) | (pValDat$Fold == 1 )], pValDat$Fold[(pValDat$Fold == FCcodeC$FC[i]) | (pValDat$Fold == 1)],label.ordering = c(1, FCcodeC$FC[i]))\n    pool.perf = performance(pool.predMeas, \"tpr\",\"fpr\")\n    pool.auc = performance(pool.predMeas, \"auc\")\n    \n    rocProc = roc(response=pValDat$Fold[(pValDat$Fold == FCcodeC$FC[i]) | (pValDat$Fold == 1)],predictor=1- pValDat$Pval[ (pValDat$Fold == FCcodeC$FC[i]) | (pValDat$Fold == 1 )],)\n    \n    # now build the three vectors for plotting - TPR, FPR, and FoldChange\n    AUC = unlist(pool.auc@y.values)\n    #print(paste(\"Ratio\",as.character(FCcodeC$FC[i])))\n    #print(paste(\"AUC\",as.character(AUC)))\n    AUCdatnew = data.frame(Ratio = legendLabelsDiff[i],AUC = round(AUC,digits = 3), Measured = length(pValDat$Fold[(pValDat$Fold == FCcodeC$FC[i])]), Spiked = length(idCols$Ratio[idCols$Ratio == FCcodeC$Ratio[i]]))\n    AUCdat = rbind(AUCdat,AUCdatnew)\n    FPR = c( unlist(pool.perf@x.values)) \n    TPR = c( unlist(pool.perf@y.values))\n    #print(TPR)\n    #print(FPR)\n    Ratio = c(rep(as.character(FCcodeC$Ratio[i]), length(unlist(pool.perf@y.values))))\n    ROCdatnew = data.frame(FPR = FPR, TPR = TPR, Ratio = Ratio)\n    ROCdat = rbind(ROCdat,ROCdatnew)\n  }\n  \n  AUCAnnot <- AUCdat\n  print(AUCAnnot)\n  \n  AUCdat$xval = 0.7\n  AUCdat$yval = seq(to = 0.25,from = 0.1,length.out=nrow(FCcodeC))\n  \n  ROCplot = ggplot(data = ROCdat, aes(x = FPR, y = TPR)) + geom_path(size = 2, aes(colour = Ratio), alpha = 0.7)+geom_point(size = 5, aes(colour = Ratio), alpha = 0.7) +colScale + geom_abline(intercept = 0, slope = 1, linetype = 2)+ annotation_custom(grob=tableGrob(AUCAnnot,show.rownames=F,equal.width=T,equal.height=T),xmin=0.375,xmax=1.0,ymin = 0,ymax = 0.25) #+geom_text(data = AUCdat,aes(x = xval, y = yval,label = paste(Ratio, \"AUC =\",as.character(round(AUC,digits=3))),hjust = 0)) \n  print(ROCplot)\n  return(list(ROCplot=ROCplot,AUCdat = AUCAnnot))\n \n}",
    "created" : 1383971008958.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3945672528",
    "id" : "AC1A640",
    "lastKnownWriteTime" : 1383617795,
    "path" : "~/Documents/NISTMunro/Projects/testerccdashboard/R/erccROC.R",
    "properties" : {
    },
    "source_on_save" : false,
    "type" : "r_source"
}