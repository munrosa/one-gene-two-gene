%\VignetteIndexEntry{testerccdashboard examples}

\documentclass{article}
\usepackage{fullpage}
\begin{document}
\SweaveOpts{concordance=TRUE}
\SweaveOpts{keep.source=TRUE}
\SweaveOpts{width=7, height=7}
\DefineVerbatimEnvironment{Sinput}{Verbatim} {xleftmargin=1em}
\DefineVerbatimEnvironment{Soutput}{Verbatim}{xleftmargin=1em}
\DefineVerbatimEnvironment{Scode}{Verbatim}{xleftmargin=1em}
\fvset{listparameters={\setlength{\topsep}{0pt}}}
\renewenvironment{Schunk}{\vspace{\topsep}}{\vspace{\topsep}}
<<echo=false>>=
options(width=60, continue = "  ")
#options(SweaveHooks=list(fig=function()
#                par(mar=c(5.1,4.1,1.1,2.1))))
@    
\title{{\tt erccdashboard} Package Vignette}
\author{Sarah A. Munro}
\maketitle

This vignette describes the use of the erccdashboard R package to analyze 
External RNA Control Consortium (ERCC) spike-in control ratio mixtures in gene
expression experiments. Two types of data from the SEQC/MAQC III project were 
analyzed.
\begin{enumerate}
  \item Rat toxicogenomics treatment and control samples for different drug 
  treatments
  \item Human reference RNA samples from the MAQC I project, Universal Human 
  Reference RNA (UHRR) and Human Brain Reference RNA (HBRR)
\end{enumerate}

\section{Rat Toxicogenomics Example: MET treatment}
\subsection{Load data and define input parameters}
Load the testerccdashboard package. 
<<initializeData,results=hide,echo=TRUE>>=
library( "erccdashboard" )
@
Load the Rat Toxicogenomics Data set.
<<loadRatData>>=
load(file = system.file("data/SEQC.RatTox.Example.RData", 
                        package = "erccdashboard"))
@
The R workspace should now contain 5 count tables and for each count table a 
corresponding total reads vector.
Take a look at the data for the MET experiment.
<<inspectRatData,keep.source=TRUE>>=
head(COH.RatTox.ILM.MET.CTL.countTable)
COH.RatTox.ILM.MET.CTL.totalReads
@
The first column of the count table, Feature, contains unique names for all
the transcripts that were quantified in this experiment. The remaining columns 
represent replicates of the pair of samples, in this count table 
the control sample is labeled CTL and the treatment sample is labeled MET. An 
underscore is included to separate the sample names from the replicate numbers 
during analysis. This naming convention Sample\textunderscore{}Rep is needed 
for the columns of any input count table.

The total reads vectors will be used for library size normalization of the count
tables. Total reads can either represent the total number of reads in FASTQ 
files or total mapped reads. In the examples provided with this package FASTQ 
file total reads are used.

For our analysis of the MET-CTL experiment start by assigning the MET-CTL data 
to the input data variables countTable and totalReads.
<<defineInputData,keep.source=TRUE>>=
countTable <- COH.RatTox.ILM.MET.CTL.countTable
totalReads <- COH.RatTox.ILM.MET.CTL.totalReads
@
In addition to countTable and totalReads, there are 7 additional variables that
must be defined by the user. First the filename prefix for results files, 
filenameRoot, needs to be defined. Here we choose to use the lab abbreviation 
COH and the platform abbreviation ILM as our identifiers, but this is flexible
for the user.
<<definefileRoot,keep.source=TRUE>>=
filenameRoot = "COH.ILM"
@
Next, 6 parameters associated with the ERCC control ratio mixtures need to be
defined, sample1Name, sample2Name, erccMixes, ERCCdilution, spikeVol, and totalRNAmass.

The sample spiked with ERCC Mix 1 is sample1Name and the sample spiked with 
ERCC Mix 2 is sample2Name. In this experiment sample1Name = MET and 
sample2Name = CTL. For a more robust experimental design the reverse spike-in 
design could be created using additional replicates of the treatment and 
control samples. ERCC Mix 2 would be spiked into MET samples and ERCC Mix 1 
would be spiked into CTL control replicates. 

ERCCdilution is the dilution factor of the pure Ambion ERCC mixes prior to 
spiking into total RNA samples. Here a 1/100 dilution was made from the Ambion 
ERCC mixes according to the protocol. The amount of diluted ERCC mix spiked into
the total RNA sample is spikeVol (units are $\mu$L). The mass of total RNA 
spiked with the diluted ERCC mix is totalRNAmass (units are $\mu$g ).
<<defineInputSpikes,keep.source=TRUE>>=
sample1Name = "MET"
sample2Name = "CTL"
ERCCMixes = "Ambion4plexPair"
ERCCdilution = 1/100
spikeVol = 1
totalRNAmass = 0.500
@
The final required input parameter, choseFDR, is the False Discovery Rate (FDR) 
for differential expression testing. A typical choice would be 0.05 (5\% FDR), 
for the rat data sets a more liberal FDR was used, choseFDR = 0.1.
<<defineFDR,keep.source=TRUE>>=
choseFDR = 0.1
@
In addition to the required input variables the user can also choose whether to 
print the results directly to a PDF file (the default is TRUE) with the variable
printPDF.

\subsection{Initialize the expDat list for analysis}
The expDat list is created with the initDat function:
<<initializeData,keep.source=TRUE>>=
expDat <- initDat(countTable, totalReads, filenameRoot, sample1Name,
                  sample2Name, ERCCMixes, ERCCdilution, spikeVol, totalRNAmass,
                  choseFDR)
@
Look at the structure of expDat
<<initializeData,keep.source=TRUE>>=
summary(expDat)
@
The expDat list will be passed to the erccdashboard functions for analysis of 
technical performance.

\subsection{Estimate the mRNA fraction difference, r$_m$ for the pair of 
samples}
Estimate r$_m$ for the sample pair using a negative binomial glm. The r$_m$ 
results will be added to the expDat structure and are necessary for the 
remaining analysis.
\begin{center}
<<est_r_m>>=
expDat <- est_r_m(expDat)
@
\end{center}
An r$_m$ of 1 indicates that the two sample types under comparison have similar
mRNA fractions of total RNA. The r$_m$ estimate is used to adjusted the expected
ERCC mixture ratios in this analysis and may indicate a need for a different
sample normalization approach.

\subsection{Test for differential expression}
Test for differential expression with the geneExprTest function. This function
wraps the QuasiSeq differential expression testing package. If a correctly
formatted csv file is provided with the necessary DE test results, then 
geneExprTest will bypass DE testing (with reduced runtime). The function will
look for a csv file with the name "filenameRoot.quasiSeq.res.csv" and the first
3 column headers of the file must be "Feature", "pvals", and "qvals".
\begin{center}
<<geneExprTest,results=hide>>=
expDat <- geneExprTest(expDat)
@
\end{center}

\subsection{Diagnostic Performance: ROC curves and AUC statistics}
Generate ROC curves for the differential ratios and the corresponding Area Under
the Curve (AUC) statistics.
\begin{center}
<<erccROC>>=
expDat = erccROC(expDat)
@
\end{center}

\subsection{Diagnostic Performance: Limit of Detection of Ratios (LODR)}
Find LODR estimates using the ERCC data p-values.
\begin{center}
<<estLODRERCC,fig=FALSE>>=
expDat = estLODR(expDat,kind = "ERCC", prob=0.9)
@
\end{center}


One can also obtain LODR estimates using p-values simulated from endogenous transcripts
\begin{center}
<<estLODRSim, fig=FALSE>>=
expDat = estLODR(expDat, kind = "Sim", prob = 0.9)  
@
\end{center}

\subsection{Use dynRangePlot function to evaluate dynamic range of the data}
This function will add a plot to \verb|expDat$Figures|
of the signal vs. abundance of the spiked ERCC controls.
\begin{center}
<<dynRangeDat>>=
expDat <- dynRangePlot(expDat, errorBars = T)
@
\end{center}
View the plot that is now stored in expDat with the command
\clearpage
\begin{center}
<<printPanelD,fig=TRUE,pdf=TRUE>>=
expDat$Figures$plotdynRange
@
\end{center}
This figure shows that in this experiment the expected signal-abundance
relationship spans a 2$^{15}$ dynamic range. To capture the full 2$^{20}$ dynamic 
range design of the control mixtures additional sequencing depth may be needed.

\subsection{Use LODR estimates to Annotate Signal-Abundance and Ratio-Abundance Plots}
Get LODR annotations for adding to plots and then annotate the signal-abundance
and ratio-abundance plots using LODR estimate information 

<<dynRangeLODRAnnot>>=
expDat <- annotLODR(expDat)
@
\clearpage
\subsection{Viewing Diagnostic Plots}
All dashboard plots are stored in the \verb|expDat$Figures|
list. You can call any figure for viewing directly and you can 
also save the figures to a pdf file. The six plots presented in the 
erccdashboard publication can be generated with the following commands.
\begin{center}
<<printPanelA,fig=TRUE,pdf=TRUE>>=
expDat$Figures$ROCplot
@
\end{center}
\clearpage
\begin{center}
<<printPanelB,fig=TRUE,pdf=TRUE>>=
expDat$Figures$plotLODR.ERCC
@
\end{center}
\clearpage
\begin{center}
<<printPanelC,fig=TRUE,pdf=TRUE>>=
expDat$Figures$dispPlot
@
\end{center}
\clearpage
\begin{center}
<<printPanelD,fig=TRUE,pdf=TRUE>>=
expDat$Figures$plotdynRangeAnnot
@
\end{center}
\clearpage
\begin{center}
<<printPanelE,fig=TRUE,pdf=TRUE>>=
expDat$Figures$plotERCCeffects
@
\end{center}
\clearpage
\begin{center}
<<printPanelF,fig=TRUE,pdf=TRUE>>=
expDat$Figures$plotRatioAnnot
@
\end{center}
\clearpage
The function savePlots will save selected figures to a pdf file. The default is
the 6 manuscript figures to a single page (plotsPerPg = ``''manuscript``''). If 
plotsPerPg = ``''single``'' then each plot is placed on an individual page in one pdf 
file. If plotlist is not defined (plotlist = NULL) then all plots in 
\verb|expDat$Figures| are printed to the file.
<<savePlots>>=
savePlots(expDat)
@

\subsection{Output Results for Comparisons Across Experiments or Between 
Laboratories}
If you wish, save your results to an Rdata file that can be reused for
comparisons across experiments or between laboratories.
<<saveResults>>=
saveResults(expDat)
@

\section{SEQC Reference RNA Examples: UHRR vs. HBRR}
\subsection{Load data and define input parameters}
<<defineMainStudyInputs, keep.source=TRUE>>=
load(file = system.file("data/SEQC.Main.Example.RData", 
                        package = "erccdashboard"))
countTable <- Lab5.ILM.UHRR.HBRR.countTable
totalReads <- Lab5.ILM.UHRR.HBRR.totalReads
filenameRoot = "Lab5"
sample1Name = "UHRR"
sample2Name = "HBRR"
ERCCMixes = "Ambion4plexPair"
ERCCdilution = 1
spikeVol = 50
totalRNAmass = 2.5*10^(3)
choseFDR = 0.01
expDat <- initDat(countTable, totalReads, filenameRoot, sample1Name,
                  sample2Name, ERCCMixes, ERCCdilution, spikeVol, totalRNAmass,
                  choseFDR)
@

<<est_r_m>>=
expDat <- est_r_m(expDat)
@

<<geneExprTest, results=hide>>=
expDat <- geneExprTest(expDat)
@

\subsection{Diagnostic Performance: ROC curves and AUC statistics}
Generate ROC curves for the differential ratios and the corresponding Area Under
the Curve (AUC) statistics.
\begin{center}
<<erccROC>>=
expDat = erccROC(expDat)
@
\end{center}

\subsection{Diagnostic Performance: Limit of Detection of Ratios (LODR)}
Find LODR estimates using the ERCC data p-values.
\begin{center}
<<estLODRERCC>>=
expDat = estLODR(expDat,kind = "ERCC", prob=0.9)
@
\end{center}


One can also obtain LODR estimates using p-values simulated from endogenous transcripts
\begin{center}
<<estLODRSim>>=
expDat = estLODR(expDat, kind = "Sim", prob = 0.9)  
@
\end{center}

\subsection{Use dynRangePlot function to evaluate dynamic range of the data}
This function will add a plot to \verb|expDat$Figures|
of the signal vs. abundance of the spiked ERCC controls.
\begin{center}
<<dynRangeDat>>=
expDat <- dynRangePlot(expDat,errorBars=T)
@
\end{center}
View the plot that is now stored in expDat with the command
\clearpage
\begin{center}
<<printPanelD,fig=TRUE,pdf=TRUE>>=
expDat$Figures$plotdynRange
@
\end{center}
This figure shows that in this experiment the expected signal-abundance
relationship spans the full 2$^{20}$ dynamic range design of the control mixtures.

\subsection{Use LODR estimates to Annotate Signal-Abundance and Ratio-Abundance Plots}
Get LODR annotations for adding to plots and then annotate the signal-abundance
and ratio-abundance plots using LODR estimate information 

<<dynRangeLODRAnnot>>=
expDat <- annotLODR(expDat)
@
\clearpage
\subsection{Viewing Diagnostic Plots}
All dashboard plots are stored in the \verb|expDat$Figures|
list. You can call any figure for viewing directly and you can 
also save the figures to a pdf file. The six plots presented in the 
erccdashboard publication can be generated with the following commands.
\begin{center}
<<printPanelASEQC,fig=TRUE,pdf=TRUE>>=
expDat$Figures$ROCplot
@
\end{center}
\clearpage
\begin{center}
<<printPanelBSEQC,fig=TRUE,pdf=TRUE>>=
expDat$Figures$plotLODR.ERCC
@
\end{center}
\clearpage
\begin{center}
<<printPanelCSEQC,fig=TRUE,pdf=TRUE>>=
expDat$Figures$dispPlot
@
\end{center}
\clearpage
\begin{center}
<<printPanelDSEQC,fig=TRUE,pdf=TRUE>>=
expDat$Figures$plotdynRangeAnnot
@
\end{center}
\clearpage
\begin{center}
<<printPanelESEQC,fig=TRUE,pdf=TRUE>>=
expDat$Figures$plotERCCeffects
@
\end{center}
\clearpage
\begin{center}
<<printPanelFSEQC,fig=TRUE,pdf=TRUE>>=
expDat$Figures$plotRatioAnnot
@
\end{center}
\clearpage
The function savePlots will save selected figures to a pdf file. The default is
the 6 manuscript figures to a single page (plotsPerPg = ``''manuscript``''). If 
plotsPerPg = ``''single``'' then each plot is placed on an individual page in one pdf 
file. If plotlist is not defined (plotlist = NULL) then all plots in 
\verb|expDat$Figures| are printed to the file.
<<savePlots>>=
savePlots(expDat)
@

\subsection{Output Results for Comparisons Across Experiments or Between 
Laboratories}
If you wish, save your results to an Rdata file that can be reused for
comparisons across experiments or between laboratories.
<<saveResults>>=
saveResults(expDat)
@
\end{document}